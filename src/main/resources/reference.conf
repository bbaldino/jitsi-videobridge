# Default configuration values for the bridge
videobridge {
  # The interval at which the expire thread runs
  expire-thread-interval=1 minute
  health {
    # The interval between health checks
    interval=10 seconds
    # The timeout for a health check
    timeout=30 seconds
    # Whether or not health check failures should be 'sticky'
    # (i.e. once the bridge becomes unhealthy, it will never
    # go back to a healthy state)
    sticky-failures=false
  }
  cc {
    # The interval at which bandwidth probing runs
    padding-period=15ms
    # The percentage change the estimated bandwidth must drop
    # by before we'll update the bitrate allocation.
    # "This is an ugly hack to prevent too many resolution/UI
    # changes in case the bridge produces too low bandwidth
    # estimate, at the risk of clogging the receiver's pipe"
    bwe-change-threshold-percent=15
    # The max resolution to allocate for thumbnails
    thumbnail-max-height-px=180
    # The preferred resolution to allocate for the onstage
    # participant, before allocating bandwidth for the thumbnails
    onstage-preferred-height-px=360
    # The preferred frame rate to allocate for the onstage
    # participant
    onstage-preferred-framerate-fps=30
    # Whether or not we're allowed to suspend the video of
    # the on-stage participant
    onstage-video-suspension-enabled=false
    # Whether or not the BWE estimates should be used (vs.
    # a default of some maximum bandwidth)
    trust-bwe=true
  }
  enabled-apis=[rest]
  xmpp {
    #TODO: replace with a nested class of individual options, i.e.:
    #processing-options {
    #    allow-any-focus=false
    #    allow-no-focus=false
    #}
    processing-options=0
    # The property that specifies allowed entities for turning on graceful
    # shutdown mode. For XMPP API this is "from" JID. In case of REST
    # the source IP is being copied into the "from" field of the IQ.
    # TODO: use an allow-all regexp string by default instead of empty string
    shutdown-allowed-source-regex=""
    # The property that specifies entities authorized to operate the bridge.
    # For XMPP API this is "from" JID. In case of REST the source IP is being
    # copied into the "from" field of the IQ.
    # TODO: use an allow-all regexp string by default instead of empty string
    authorized-source-regex=""
  }
  stats {
    enabled=true
    # The default interval for stats
    interval=1 second
    # Example transport configs.  See StatsTransportConfig.
    transports=[
      {
        name="muc"
        interval=1 second
      }
    ]
  }
  transport {
    ice {
      # A prefix which can be added to the ICE ufrag
      ufrag-prefix=""
      # Whether the "component socket" feature of ice4j should be used. If this
      # feature is used, ice4j will create a separate merging socket instance
      # for each component, which reads from the sockets of all successful
      # candidate pairs. Otherwise, this merging socket instance is not created,
      # and the sockets from the individual candidate pairs should be used
      # directly.
      use-component-socket=true
      # The {@link KeepAliveStrategy} to configure for ice4j {@link Component}s,
      # which will dictate which candidate pairs to keep alive.
      # Default to keeping alive the selected pair and any TCP pairs.
      # Maps to org.ice4j.ice.KeepAliveStrategy
      keep-alive-strategy="SELECTED_AND_TCP"
      # TODO: create a harvester type enum and change these to something like:
      # 'ports' is a priority-ordered list of ports to try
      # harvesters=[
      #   {
      #     type=single_port_udp
      #     ports=[10000,...]
      #   },
      #   {
      #     type=single_port_tcp
      #     mode=ssltcpp
      #     port=...
      #   }
      #]
      # The port used for SinglePortHarvester
      single-port-harvester-port=10000
      # Whether or not the TCP harvester should be disabled
      disable-tcp-harvester=false
      tcp-harvester-ports=[443, 4443]
      tcp-harvester-mapped-port=-1
      use-ssltcp=true
    }
  }
  websockets {
    enabled=true
    server-id="default-id"
    domain=""
  }
  octo {
    # The octo region of this JVB
    region=""
  }
}

ice4j {
  # Old name we use to support backwards compatibility

}
